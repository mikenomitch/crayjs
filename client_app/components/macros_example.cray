 /** @jsx React.DOM */
var React = window.React = require('react');
var _ = require('lodash')

var CrayJs = React.createClass({

  whoa: function(){
    console.log("-------------");
    console.log("whoa I was called")
    console.log("-------------");
  },

  unlessExample: function(){
    console.log("one does not equal two") unless 1 == 2
    console.log("two does not equal two") unless 2 == 2
  },

  doubleEquals: function(){
    console.log("-------------");
    console.log("1 == \'1\'");
    console.log("1" == 1);
    console.log("what would this look like in js");
    console.log("-------------");
  },

  lambdaJam: function(){
    var numbers = [1,2,3,4]
    var theSum = _.reduce(
      numbers,
      lam(_1 + _2)
    )
    console.log("-------------");
    console.log(theSum);
    console.log("-------------");
  },

  pipeline: function(){
    var combineWithOthers = function(a,b,c){
      return (b + c + a)
    }

    var capitalize = function(doFullString, str){
      if(doFullString){
        return str.toUpperCase();
      }else{
        return str.charAt(0).toUpperCase() + str.slice(1);
      }
    }

    var logWithBorders = function(str){
      console.log("-------------");
      console.log(str);
      console.log("-------------");
    }

    "foo" |> combineWithOthers("bar", "baz")
          |> capitalize(true)
          |> logWithBorders()
  },

  render: function(){
    holderStyle = {height: "40px"};
    return(
      <div>
        <h3> Some Examples: </h3>
        <p> What are the best parts of Coffeescript? Lets steal them.</p>

        <button onClick={this.unlessExample}>
          unless is cool
        </button>
        <div style={holderStyle} ref="unlessExample"/>

        <button onClick={this.doubleEquals}>
          double vs triple equals is nice
        </button>
        <div style={holderStyle} ref="doubleEquals"/>

        <button onClick={@whoa}>
          the @ symbol aint bad
        </button>
        <div style={holderStyle} ref="doubleEquals"/>

        <p> People have ported almost all of ES6 to sweetjs too! Including classes :)</p>

        <p> And maybe sme cool stuff from clojure:</p>

        <button onClick={this.lambdaJam}>
          cool lambda syntax
        </button>
        <div style={holderStyle} ref="lamjam"/>

        <button onClick={this.pipeline}>
          pipelining
        </button>
        <div style={holderStyle} ref="pipeline"/>

      </div>
    );
  }
});

module.exports = CrayJs;