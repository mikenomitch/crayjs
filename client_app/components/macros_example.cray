 /** @jsx React.DOM */
var React = window.React = require('react');
var _ = require('lodash')

var CrayJs = React.createClass({


  whoa: function(){
    console.log("whoa I was called")
    console.log("-------------");
  },



  unlessExample: function(){
    console.log("one does not equal two") unless 1 == 2
    console.log("two does not equal two") unless 2 == 2
    console.log("-------------");
  },


  doubleEquals: function(){
    console.log("1" == 1);
    console.log("-------------");
  },


  destructureMe: function(){
    var [a,b,c] = [1,2,3]
    console.log(b)
    console.log("-------------");
  },



  lambdaJam: function(){
    var numbers = [1,2,3,4]
    var theSum = _.reduce(
      numbers,
      lam(_1 + _2)
    )
    console.log(theSum);
    console.log("-------------");
  },


  pipeline: function(){
    var combineWithOthers = function(a,b,c){
      return (b + c + a)
    }

    var capitalize = function(doFullString, str){
      if(doFullString){
        return str.toUpperCase();
      }else{
        return str.charAt(0).toUpperCase() + str.slice(1);
      }
    }

    var logWithBorder = function(str){
      console.log(str);
      console.log("-------------");
    }

    "foo" |> combineWithOthers("bar", "baz")
          |> capitalize(true)
          |> logWithBorder()
  },


  render: function(){
    holderStyle = {height: "40px"};
    return(
      <div>
        <h3> Introducing Cray: </h3>
        <p> With the perks of coffeescript...</p>

        <button onClick={this.unlessExample}>
          'unless'
        </button>
        <br /><br />

        <button onClick={this.doubleEquals}>
          no more doulbe equals
        </button>
        <br /><br />

        <button onClick={@whoa}>
          get @ me
        </button>
        <br /><br />

        <button onClick={this.destructureMe}>
          destructure for instructure
        </button>
        <br /><br />

        <p> throw in some cool stuff from clojure:</p>

        <button onClick={this.lambdaJam}>
          cool lambda syntax
        </button>
        <br /><br />

        <button onClick={this.pipeline}>
          pipelines
        </button>
        <br /><br />
      </div>
    );
  }
});

module.exports = CrayJs;